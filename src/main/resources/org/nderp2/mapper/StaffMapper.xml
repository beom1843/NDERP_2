<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nderp2.mapper.StaffMapper">
	<select id="getCurrentStaffNo" resultType="Integer">
		select max(staff_no) from staff
	</select>

	<select id="getCurrentInstNo" resultType="Integer">
		select max(staff_institution_no) from staff_institution
	</select>
	
	<select id="getCurrentProjectNo" resultType="Integer">
		select max(staff_project_no) from staff_project
	</select>

	<select id="getCurrentTasteNo" resultType="Integer">
		select max(staff_taste_no) from staff_taste
	</select>
	
	<insert id="createStaff">
		insert into Staff values
			(staff_seq.nextval, #{staff_id}, #{staff_pw}, #{staff_name}, #{staff_id_no}, #{staff_hp}, #{staff_email},#{staff_religion},#{staff_military},#{staff_address},#{staff_zipcode})
	</insert>
	
	<insert id="insertHotline">
		insert into staff_Hotline values
			(staff_Hotline_seq.nextval,#{staff_no},#{hotline_code},#{hotline_name},#{hotline_hp} )
	</insert>
	
	<insert id="insertBank">
		insert into staff_Bank values
			(staff_Bank_seq.nextval,#{staff_no}, #{bank_code}, #{bank_number})
	</insert>
	
	<insert id="insertSchool">
		insert into staff_School values
			(staff_School_seq.nextval,#{staff_no}, #{college_code},#{school_name},#{school_major},#{school_sub},#{school_graduateday},#{education_code})
	</insert>
	
	<insert id="insertFamily">
		insert into staff_Family values
			(staff_Family_seq.nextval,#{staff_no}, #{family_code}, #{family_name}, #{family_job}, #{family_birthy},#{family_livew})
	</insert>
	
	<insert id="insertCareer">
		insert into staff_Career values
			(staff_Career_seq.nextval,#{staff_no},#{career_hired},#{career_position},#{career_department},#{career_code},#{career_name},#{career_desc},#{career_salary},#{career_hireday},#{career_retireday})
	</insert>
	
	<insert id="insertCertification">
		insert into staff_Certification values
			(staff_Certification_seq.nextval,#{staff_no},#{certification_code})
	</insert>
	
	<insert id="insertForeignlang">
		insert into staff_Foreignlang values
			(staff_Foreignlang_seq.nextval,#{staff_no},#{foreignlang_code},#{foreignlang_type} )
	</insert>
	
	<insert id="insertInstitution">
		insert into staff_Institution values
			(staff_Institution_seq.nextval,#{staff_no},#{institution_name}, #{institution_period},#{institution_grad})
	</insert>
	
	<insert id="insertInstStack">
		insert into institution_stack values
			(institution_stack_seq.nextval, #{institution_stack_code}, #{institution_no})
	</insert>
	
	<insert id="insertTaste">
		insert into staff_Taste values
			(staff_Taste_seq.nextval,#{staff_no}, #{smoking_code},#{beer_code},#{soju_code})
	</insert>
	
	<insert id="insertTasteInterest">
		insert into taste_interest values
			(taste_interest_seq.nextval, #{taste_interest_code}, #{taste_no})
	</insert>
	
	<insert id="insertHobby">
		insert into staff_Hobby values
			(staff_Hobby_seq.nextval,#{staff_no},#{hobby} )
	</insert>
	
	<insert id="insertProject">
		insert into staff_Project values
			(staff_Project_seq.nextval,#{staff_no},#{project_startday},#{project_endday},#{project_customer},#{project_company},#{project_name})
	</insert>
	
	<insert id="insertRole">
		insert into project_role values
		(project_role_seq.nextval,#{staff_project_no}, #{project_role})
	</insert>
	
	<insert id="insertDbms">
		insert into project_Dbms values
			(project_Dbms_seq.nextval, #{staff_project_no},#{project_dbms})
	</insert>
	
	<insert id="insertDevetc">
		insert into project_Devetc values
			(project_Devetc_seq.nextval, #{staff_project_no},#{project_devetc})
	</insert>
		
	<insert id="insertFramework">
		insert into project_Framework values
			(project_Framework_seq.nextval, #{staff_project_no},#{project_framework})
	</insert>
		
	<insert id="insertLanguage">
		insert into project_Language values
			(project_Language_seq.nextval, #{staff_project_no},#{project_language})
	</insert>
		
	<insert id="insertOs">
		insert into project_Os values
			(project_Os_seq.nextval, #{staff_project_no},#{project_os})
	</insert>
		
	<insert id="insertServer">
		insert into project_Server values
			(project_Server_seq.nextval, #{staff_project_no},#{project_server})
	</insert>
	
	<select id="search" resultType="org.nderp2.domain.ResultDAO">
	select rownum, A.staff_name, A.sex,A.birthy, A.age,A.staff_hp,A.staff_email, A.staff_id_no, A.staff_address,
		B.education_name as staff_education, B.grad_year as staff_grad_y,
		C.dev_year as staff_dev_year, C.total_skill as staff_total_skill,
		D.certification as staff_certification,
		A.birthd, E.career_year, E.career_code, A.STAFF_MILITARY, G.soju_code, G.beer_code,C.start_Day,C.end_Day,C.dev_y
	from 
		(select rownum,staff_no, staff_name,substr(staff_id_no,1,4) as birthd,
			case substr(staff_id_no, 7,1) 
			when '1' then '남'
			when '2' then '여'
			when '3' then '남'
			when '4' then '여' end as sex,
	
			case substr(staff_id_no, 7,1) 
			when '1' then to_number(to_char(sysdate,'yyyy'))-1899-substr(staff_id_no, 1, 2)||'세'
			when '2' then  to_number(to_char(sysdate,'yyyy'))-1899-substr(staff_id_no, 1, 2)||'세'
			when '3' then  to_number(to_char(sysdate,'yyyy'))-1999-substr(staff_id_no, 1, 2)||'세'
			when '4' then  to_number(to_char(sysdate,'yyyy'))-1999-substr(staff_id_no, 1, 2)||'세' end as age,
			
			case substr(staff_id_no, 7,1)
			when '1' then 1900+substr(staff_id_no, 1, 2)||'년생'
			when '2' then  1900+substr(staff_id_no, 1, 2)||'년생'
			when '3' then  2000+substr(staff_id_no, 1, 2)||'년생'
			when '4' then  2000+substr(staff_id_no, 1, 2)||'년생' end as birthy,

			substr(staff_hp,1,3)||'-'||substr(staff_hp,4,4)||'-'||substr(staff_hp,8,4) as staff_hp, staff_email, 
			substr(staff_id_no,1,6)||'-'|| substr(staff_id_no, 7,7) as staff_id_no ,
			staff_address, staff_military
		from staff) A,
		
		
		(select b.staff_no, b.College_Code,a.education_name, b.grad_year||'년' as grad_year
		from code_education a, 
			(select a.college_code, a.staff_no, b.education_code,substr(a.school_graduateday,1,4) as grad_year
			from staff_school a,(select staff_no, max(education_code) as education_code
			from staff_school
			group by staff_no) b
		where a.staff_no=b.staff_no
			and a.education_code = b.education_code) b
			where a.education_code=b.education_code) B,
	
	
	(select b.staff_no,
		b.project_language||','|| c.project_framework||','|| d.project_dbms||','|| e.project_devetc as total_skill, 
		f.dev_year||'년차' as dev_year, f.dev_year as dev_y,
    b.language_code, c.framework_code, d.dbms_code,e.devetc_code,
    g.role_code,g.project_role,f.start_day, f.end_day
	from
	(select a.staff_no, regexp_replace(listagg(a.PROJECT_language,',')
			  within group(order by a.PROJECT_language_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as project_language,
	      regexp_replace(listagg(a.language_code,',')
			  within group(order by a.PROJECT_language_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as language_code
			  from (select L.Project_language_No as project_language_no,
	  l.staff_project_no as staff_project_no, 
	  Code_L.language_Name as project_language,
	  L.Project_language as language_code,
	  S.Staff_No
			 from code_language code_l, project_language l, staff_project s
			 where l.project_language = code_l.language_code
	     and S.Staff_Project_No=L.Staff_Project_No)a, STAFF_PROJECT b
			 group by a.staff_no
			 order by a.STAFF_NO desc) b,

	(select a.staff_no, regexp_replace(listagg(a.PROJECT_framework,',')
			  within group(order by a.PROJECT_framework_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as project_framework,
	      regexp_replace(listagg(a.framework_code,',')
			  within group(order by a.PROJECT_framework_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as framework_code
			  from (select L.Project_framework_No as project_framework_no,
	  l.staff_project_no as staff_project_no, 
	  Code_L.framework_Name as project_framework,
	  L.Project_framework as framework_code,
	  S.Staff_No
			 from code_framework code_l, project_framework l, staff_project s
			 where l.project_framework = code_l.framework_code
	     and S.Staff_Project_No=L.Staff_Project_No)a, STAFF_PROJECT b
			 group by a.staff_no
			 order by a.STAFF_NO desc) c,

	(select a.staff_no, regexp_replace(listagg(a.PROJECT_dbms,',')
			  within group(order by a.PROJECT_dbms_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as project_dbms,
	      regexp_replace(listagg(a.dbms_code,',')
			  within group(order by a.PROJECT_dbms_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as dbms_code
			  from (select L.Project_dbms_No as project_dbms_no,
	  l.staff_project_no as staff_project_no, 
	  Code_L.dbms_Name as project_dbms,
	  L.Project_dbms as dbms_code,
	  S.Staff_No
			 from code_dbms code_l, project_dbms l, staff_project s
			 where l.project_dbms = code_l.dbms_code
	     and S.Staff_Project_No=L.Staff_Project_No)a, STAFF_PROJECT b
			 group by a.staff_no
			 order by a.STAFF_NO desc) d,

	(select a.staff_no, regexp_replace(listagg(a.PROJECT_devetc,',')
			  within group(order by a.PROJECT_devetc_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as project_devetc,
	      regexp_replace(listagg(a.devetc_code,',')
			  within group(order by a.PROJECT_devetc_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as devetc_code
			  from (select L.Project_devetc_No as project_devetc_no,
	  l.staff_project_no as staff_project_no, 
	  Code_L.devetc_Name as project_devetc,
	  L.Project_devetc as devetc_code,
	  S.Staff_No
			 from code_devetc code_l, project_devetc l, staff_project s
			 where l.project_devetc = code_l.devetc_code
	     and S.Staff_Project_No=L.Staff_Project_No)a, STAFF_PROJECT b
			 group by a.staff_no
			 order by a.STAFF_NO desc) e,
			 
	(select staff_no, to_number(to_char(sysdate,'yyyy'))-substr(min(project_startday),1,4)+1 as dev_year,
		regexp_replace(listagg(PROJECT_startday,',')
			within group(order by staff_project_no),'([^,]+)(,\1)*(,|$)', '\1\3') as start_day,
		regexp_replace(listagg(PROJECT_endday,',')
		  within group(order by staff_project_no),'([^,]+)(,\1)*(,|$)', '\1\3') as end_day
	from staff_project
	group by staff_no) f,
			
    (select a.staff_no, regexp_replace(listagg(a.PROJECT_role,',')
		  within group(order by a.PROJECT_role_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as project_role,
      regexp_replace(listagg(a.role_code,',')
		  within group(order by a.PROJECT_role_NO),'([^,]+)(,\1)*(,|$)', '\1\3') as role_code
		  from (select L.Project_role_No as project_role_no,
				  l.staff_project_no as staff_project_no, 
				  Code_L.role_Name as project_role,
				  L.Project_role as role_code,
				  S.Staff_No
				 from code_role code_l, project_role l, staff_project s
					 where l.project_role = code_l.role_code
			     and S.Staff_Project_No=L.Staff_Project_No)a, STAFF_PROJECT b
	 group by a.staff_no
	 order by a.STAFF_NO desc) g
     
	  where b.Staff_No = c.Staff_No
		  and b.Staff_No = d.Staff_No
		  and b.Staff_No = e.Staff_No
		  and b.staff_no =f.staff_no
		  and b.staff_no = g.staff_no) C,
	  
		(select c.staff_no,
	  	regexp_replace(listagg(C.Staff_Certification, ',')within group(order by C.Staff_Certification),'([^,]+)(,\1)*(,|$)', '\1\3')
			as certification
		from
			(select a.staff_certification_no, a.staff_no, b.certification_name as staff_certification
			from staff_certification a, code_certification b
			where a.certification_code = b.certification_code) c,
			staff d
		group by C.Staff_No) D,
		
		
		(select a.staff_no ,
			round(sum((to_number(substr(a.career_retireday,1,4))-to_number(substr(a.career_hireday,1,4)))*12+
				to_number(substr(a.career_retireday,5,2))-to_number(substr(a.career_hireday,5,2)))/12,1) as career_year,
			regexp_replace(listagg(a.career_code,',') within group(order by a.staff_career_no), '([^,]+)(,\1)*(,|$)', '\1\3') as career_code
		from staff_career a
		group by a.staff_no) E,
		staff_taste G
		
	where A.staff_no = B.staff_no
		and A.staff_no = C.staff_no
		and A.staff_no = D.staff_no
		and A.staff_no = E.staff_no
		and a.staff_no = g.staff_no
		<foreach collection="typeArr" item="type">
			<trim prefix=" AND(" suffix=")">
				<if test="type=='a'.toString()">
				dev_y between #{dev1} and #{dev2}
				</if>
				<if test="type=='b'.toString()">
				</if>
				<if test="type=='c'.toString()">
				</if>
				<if test="type=='d'.toString()">
				</if>
				<if test="type=='e'.toString()">
				</if>
				<if test="type=='f'.toString()">
				</if>
				<if test="type=='g'.toString()">
				</if>
				<if test="type=='h'.toString()">
				</if>
				<if test="type=='i'.toString()">
				</if>
				<if test="type=='j'.toString()">
				</if>
				<if test="type=='k'.toString()">
				</if>
				<if test="type=='l'.toString()">
				</if>
				<if test="type=='m'.toString()">
				</if>
				<if test="type=='n'.toString()">
				</if>
				<if test="type=='o'.toString()">
				</if>
				<if test="type=='p'.toString()">
				</if>
				<if test="type=='q'.toString()">
				</if>
				<if test="type=='r'.toString()">
				</if>
				<if test="type=='s'.toString()">
				</if>
			</trim>
		</foreach>
		
	</select>

</mapper>